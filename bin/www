#!/usr/bin/env node
import express from "express";
import upath from "upath";
import { fileURLToPath } from 'url';
import pg from 'pg';

const port = 3000;
const app = express();

const db = new pg.Client({
    user: 'posts_ng5r_user',
    password: 'cPRRVC4aBmlRXLtBTcVNmqggs5Ytk9au',
    host: 'dpg-co3r6n21hbls73blmt00-a.singapore-postgres.render.com',
    database: 'posts_ng5r',
    port: 5432,
    ssl: true
});
await db.connect()

const __dirname = upath.dirname(fileURLToPath(import.meta.url));
const distPath = upath.join(__dirname, '../dist');
const viewsPath = upath.join(__dirname, '../src/ejs');
app.use(express.static(distPath));
app.set("views", viewsPath);

app.get("/", (req, res) => {
    res.render("index.ejs",);
});

app.get("/about", (req, res) => {
    res.render("about.ejs",);
});

app.get("/posts", async (req, res) => {
    const result = await db.query('SELECT * FROM posts');
    const posts = result.rows.map(({id, title, content})=>({id, title, content}));
    res.render("posts.ejs",{posts: posts});
});

app.get("/posts/:id(\\d+)", async (req, res) => {
    const id = req.params.id;
    const result = await db.query('SELECT * FROM posts WHERE id=$1', [id]);
    const content = result.rows[0].content;
    const title = result.rows[0].title;
    res.render("post.ejs", { title: title, content: content });
});


app.listen(port, () => {
    console.log(`Port ${port} has been listening.`);
});